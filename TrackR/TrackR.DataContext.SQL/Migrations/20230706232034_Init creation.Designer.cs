// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackR.DataContext.SQL;

#nullable disable

namespace TrackR.DataContext.SQL.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20230706232034_Init creation")]
    partial class Initcreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.5.23280.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrackR.Models.SQL.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.HasIndex("BoardId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            BoardId = 1,
                            CreatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1550),
                            Issue = "Build the data models for SQL database",
                            Title = "Build SQL Data Models",
                            UpdatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1550),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.Board", b =>
                {
                    b.Property<int>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoardId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BoardId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            BoardId = 1,
                            CreatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1410),
                            Name = "TrackR",
                            UpdatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1500)
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.Subtask", b =>
                {
                    b.Property<int>("SubtaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubtaskID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubtaskID");

                    b.HasIndex("TaskId");

                    b.ToTable("Subtask");

                    b.HasData(
                        new
                        {
                            SubtaskID = 1,
                            CreatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1580),
                            Issue = "Build out the model for boards",
                            TaskId = 1,
                            Title = "Board Model",
                            UpdatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1580)
                        },
                        new
                        {
                            SubtaskID = 2,
                            CreatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1590),
                            Issue = "Build out the model for user",
                            TaskId = 1,
                            Title = "User Model",
                            UpdatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1590)
                        },
                        new
                        {
                            SubtaskID = 3,
                            CreatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1610),
                            Issue = "Build out the activity for boards",
                            TaskId = 1,
                            Title = "Activity Model",
                            UpdatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1610)
                        },
                        new
                        {
                            SubtaskID = 4,
                            CreatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1620),
                            Issue = "Build out the Subtask for user",
                            TaskId = 1,
                            Title = "Subtask Model",
                            UpdatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(1620)
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(780),
                            Email = "Joseph.Huntley@outlook.com",
                            FirstName = "Joseph",
                            LastName = "Huntley",
                            Password = "5E092899898BE3A13EC5314655F58733184C5E96C2CEE42B43D56CC69E2AB74934899C0BE1FD44B0AEAE403F74F5ACFF4191230AD17F4650AAE5229079CEB98C",
                            Salt = new byte[] { 36, 190, 150, 169, 157, 163, 20, 109, 26, 33, 23, 136, 155, 242, 209, 82, 98, 197, 226, 221, 147, 177, 218, 66, 226, 140, 247, 40, 61, 91, 76, 157, 102, 104, 216, 209, 45, 244, 206, 161, 71, 101, 219, 142, 239, 124, 205, 253, 150, 170, 4, 87, 203, 214, 63, 109, 202, 111, 61, 99, 130, 114, 76, 36 },
                            UpdatedDate = new DateTime(2023, 7, 6, 19, 20, 34, 725, DateTimeKind.Local).AddTicks(860)
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.Activity", b =>
                {
                    b.HasOne("TrackR.Models.SQL.Board", "Parent")
                        .WithMany("Tasks")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackR.Models.SQL.User", "Owner")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Owner");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("TrackR.Models.SQL.Subtask", b =>
                {
                    b.HasOne("TrackR.Models.SQL.Activity", "Parent")
                        .WithMany("Subtasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("TrackR.Models.SQL.Activity", b =>
                {
                    b.Navigation("Subtasks");
                });

            modelBuilder.Entity("TrackR.Models.SQL.Board", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
