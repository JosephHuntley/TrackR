// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackR.DataContext.SQL;

#nullable disable

namespace TrackR.DataContext.SQL.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.5.23280.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TrackR.Models.SQL.Activity", b =>
                {
                    b.Property<int>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityId"));

                    b.Property<int>("BoardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ActivityId");

                    b.HasIndex("BoardId");

                    b.HasIndex("SectionId");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            ActivityId = 1,
                            BoardId = 1,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6150),
                            Issue = "Build the data models for SQL database",
                            SectionId = 2,
                            Title = "Build SQL Data Models",
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6150),
                            UserId = 1
                        },
                        new
                        {
                            ActivityId = 12,
                            BoardId = 1,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6160),
                            Issue = "Build the frontend in blazor",
                            SectionId = 1,
                            Title = "Build View",
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6160),
                            UserId = 1
                        },
                        new
                        {
                            ActivityId = 3,
                            BoardId = 1,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6160),
                            Issue = "Build the db context for SQL database",
                            SectionId = 3,
                            Title = "Build SQL Data Context",
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6160),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.Board", b =>
                {
                    b.Property<int>("BoardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoardId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("BoardId");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            BoardId = 1,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6110),
                            Name = "TrackR",
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6120)
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.Section", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SectionId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SectionId");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            SectionId = 1,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6230),
                            Name = "TODO",
                            Position = 1,
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6230)
                        },
                        new
                        {
                            SectionId = 2,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6230),
                            Name = "Doing",
                            Position = 2,
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6230)
                        },
                        new
                        {
                            SectionId = 3,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6240),
                            Name = "Done",
                            Position = 3,
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6240)
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.Subtask", b =>
                {
                    b.Property<int>("SubtaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubtaskId"));

                    b.Property<bool>("Completed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Issue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubtaskId");

                    b.HasIndex("SectionId");

                    b.HasIndex("TaskId");

                    b.ToTable("Subtasks");

                    b.HasData(
                        new
                        {
                            SubtaskId = 1,
                            Completed = true,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6190),
                            Issue = "Build out the model for boards",
                            SectionId = 3,
                            TaskId = 1,
                            Title = "Board Model",
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6190)
                        },
                        new
                        {
                            SubtaskId = 2,
                            Completed = false,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6190),
                            Issue = "Build out the model for user",
                            SectionId = 2,
                            TaskId = 1,
                            Title = "User Model",
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6200)
                        },
                        new
                        {
                            SubtaskId = 3,
                            Completed = false,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6200),
                            Issue = "Build out the activity for boards",
                            SectionId = 1,
                            TaskId = 1,
                            Title = "Activity Model",
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6210)
                        },
                        new
                        {
                            SubtaskId = 4,
                            Completed = true,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6210),
                            Issue = "Build out the Subtask for user",
                            SectionId = 3,
                            TaskId = 1,
                            Title = "Subtask Model",
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(6210)
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(5840),
                            Email = "Joseph.Huntley@outlook.com",
                            FirstName = "Joseph",
                            LastName = "Huntley",
                            Password = "515DA5D4CAE5AD5C9CF5470FF42F85D3E5F9C96AC3B8BAEB9362C6F8F4D1FE4A6F45EF5965344DDAB9D5CC31D19B307931CF9A6BF705FD015018F3201BF191DF",
                            Salt = new byte[] { 117, 154, 129, 18, 15, 40, 209, 55, 200, 224, 144, 48, 225, 71, 239, 90, 65, 142, 1, 232, 161, 190, 90, 84, 107, 136, 158, 141, 130, 132, 234, 99, 41, 99, 107, 62, 58, 172, 212, 36, 70, 40, 1, 167, 216, 234, 179, 69, 87, 196, 141, 44, 80, 30, 137, 18, 62, 182, 110, 28, 173, 49, 228, 29 },
                            UpdatedDate = new DateTime(2023, 7, 7, 17, 54, 2, 410, DateTimeKind.Local).AddTicks(5870)
                        });
                });

            modelBuilder.Entity("TrackR.Models.SQL.Activity", b =>
                {
                    b.HasOne("TrackR.Models.SQL.Board", "Parent")
                        .WithMany("Tasks")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackR.Models.SQL.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackR.Models.SQL.User", "Owner")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Owner");

                    b.Navigation("Parent");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("TrackR.Models.SQL.Subtask", b =>
                {
                    b.HasOne("TrackR.Models.SQL.Section", "Section")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TrackR.Models.SQL.Activity", "Parent")
                        .WithMany("Subtasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Section");
                });

            modelBuilder.Entity("TrackR.Models.SQL.Activity", b =>
                {
                    b.Navigation("Subtasks");
                });

            modelBuilder.Entity("TrackR.Models.SQL.Board", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
